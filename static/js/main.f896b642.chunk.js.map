{"version":3,"sources":["hooks/http.hook.js","components/heroesListItem/HeroesListItem.js","components/spinner/Spinner.js","components/heroesList/HeroesList.js","actions/index.js","components/heroesAddForm/HeroesAddForm.js","components/heroesFilters/HeroesFilters.js","components/app/App.js","reducers/heroes.js","reducers/filters.js","store/index.js","index.js"],"names":["useHttp","useState","process","setProcess","request","useCallback","url","a","method","body","headers","fetch","response","ok","Error","status","json","data","clearError","HeroesListItem","elementClassName","name","description","element","onDelete","className","src","alt","style","objectFit","onClick","type","aria-label","Spinner","role","HeroesList","filteredHeroesSelector","createSelector","state","filters","activeFilter","heroes","filter","console","log","item","filteredHeroes","useSelector","heroesLoadingStatus","dispatch","useDispatch","useEffect","then","payload","catch","id","heroDeleted","err","arr","elements","length","CSSTransition","timeout","classNames","map","props","TransitionGroup","component","HeroesAddForm","heroName","setHeroName","heroDescr","setHeroDescr","heroElement","setHeroElement","filtersLoadingStatus","onSubmit","e","preventDefault","hero","newHero","uuidv4","JSON","stringify","res","htmlFor","required","placeholder","value","onChange","target","height","label","renderFilters","HeroesFilters","filtersFetched","btnClass","active","App","initialState","action","store","createStore","combineReducers","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f896b642.chunk.js","sourcesContent":["import { useCallback, useState } from 'react';\n\nexport const useHttp = () => {\n\tconst [process, setProcess] = useState('waiting');\n\n\tconst request = useCallback(\n\t\tasync (\n\t\t\turl,\n\t\t\tmethod = 'GET',\n\t\t\tbody = null,\n\t\t\theaders = { 'Content-Type': 'application/json' }\n\t\t) => {\n\t\t\tsetProcess('loading');\n\n\t\t\ttry {\n\t\t\t\tconst response = await fetch(url, { method, body, headers });\n\n\t\t\t\tif (!response.ok) {\n\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t`Could not fetch ${url}, status: ${response.status}`\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\tconst data = await response.json();\n\n\t\t\t\treturn data;\n\t\t\t} catch (e) {\n\t\t\t\tsetProcess('error');\n\t\t\t\tthrow e;\n\t\t\t}\n\t\t},\n\t\t[]\n\t);\n\n\tconst clearError = useCallback(() => {\n\t\tsetProcess('loading');\n\t}, []);\n\n\treturn {\n\t\trequest,\n\t\tclearError,\n\t\tprocess,\n\t\tsetProcess,\n\t};\n};\n","const HeroesListItem = ({ name, description, element, onDelete }) => {\n\tlet elementClassName;\n\n\tswitch (element) {\n\t\tcase 'fire':\n\t\t\telementClassName = 'bg-danger bg-gradient';\n\t\t\tbreak;\n\t\tcase 'water':\n\t\t\telementClassName = 'bg-primary bg-gradient';\n\t\t\tbreak;\n\t\tcase 'wind':\n\t\t\telementClassName = 'bg-success bg-gradient';\n\t\t\tbreak;\n\t\tcase 'earth':\n\t\t\telementClassName = 'bg-secondary bg-gradient';\n\t\t\tbreak;\n\t\tdefault:\n\t\t\telementClassName = 'bg-warning bg-gradient';\n\t}\n\n\treturn (\n\t\t<li\n\t\t\tclassName={`card flex-row mb-4 shadow-lg text-white ${elementClassName}`}\n\t\t>\n\t\t\t<img\n\t\t\t\tsrc='http://www.stpaulsteinbach.org/wp-content/uploads/2014/09/unknown-hero.jpg'\n\t\t\t\tclassName='img-fluid w-25 d-inline'\n\t\t\t\talt='unknown hero'\n\t\t\t\tstyle={{ objectFit: 'cover' }}\n\t\t\t/>\n\t\t\t<div className='card-body'>\n\t\t\t\t<h3 className='card-title'>{name}</h3>\n\t\t\t\t<p className='card-text'>{description}</p>\n\t\t\t</div>\n\t\t\t<span\n\t\t\t\tonClick={onDelete}\n\t\t\t\tclassName='position-absolute top-0 start-100 translate-middle badge border rounded-pill bg-light'\n\t\t\t>\n\t\t\t\t<button\n\t\t\t\t\ttype='button'\n\t\t\t\t\tclassName='btn-close btn-close'\n\t\t\t\t\taria-label='Close'\n\t\t\t\t></button>\n\t\t\t</span>\n\t\t</li>\n\t);\n};\n\nexport default HeroesListItem;\n","\nconst Spinner = () => {\n    return (\n        <div className=\"spinner-border mx-auto mt-5\" role=\"status\">\n            <span className=\"visually-hidden\">Loading...</span>\n        </div>\n    )\n}\n\nexport default Spinner;","import { useHttp } from '../../hooks/http.hook';\nimport { useEffect, useCallback } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport { createSelector } from 'reselect';\nimport {\n\theroesFetching,\n\theroesFetched,\n\theroesFetchingError,\n\theroDeleted,\n} from '../../actions';\nimport HeroesListItem from '../heroesListItem/HeroesListItem';\nimport Spinner from '../spinner/Spinner';\n\nimport './heroesList.scss';\n\nconst HeroesList = () => {\n\tconst filteredHeroesSelector = createSelector(\n\t\tstate => state.filters.activeFilter,\n\t\tstate => state.heroes.heroes,\n\t\t(filter, heroes) => {\n\t\t\tif (filter === 'all') {\n\t\t\t\tconsole.log('render');\n\t\t\t\treturn heroes;\n\t\t\t} else {\n\t\t\t\treturn heroes.filter(item => item.element === filter);\n\t\t\t}\n\t\t}\n\t);\n\tconst filteredHeroes = useSelector(filteredHeroesSelector);\n\tconst heroesLoadingStatus = useSelector(state => state.heroesLoadingStatus);\n\tconst dispatch = useDispatch();\n\tconst { request } = useHttp();\n\n\tuseEffect(() => {\n\t\tdispatch(heroesFetching());\n\t\trequest('http://localhost:3001/heroes')\n\t\t\t.then(data => dispatch(heroesFetched(data)))\n\t\t\t.catch(() => dispatch(heroesFetchingError()));\n\n\t\t// eslint-disable-next-line\n\t}, []);\n\n\t// Функция берет id и по нему удаляет ненужного персонажа из store\n\t// ТОЛЬКО если запрос на удаление прошел успешно\n\t// Отслеживайте цепочку действий actions => reducers\n\tconst onDelete = useCallback(\n\t\tid => {\n\t\t\t// Удаление персонажа по его id\n\t\t\trequest(`http://localhost:3001/heroes/${id}`, 'DELETE')\n\t\t\t\t.then(data => console.log(data, 'Deleted'))\n\t\t\t\t.then(dispatch(heroDeleted(id)))\n\t\t\t\t.catch(err => console.log(err));\n\t\t\t// eslint-disable-next-line\n\t\t},\n\t\t[request]\n\t);\n\n\tif (heroesLoadingStatus === 'loading') {\n\t\treturn <Spinner />;\n\t} else if (heroesLoadingStatus === 'error') {\n\t\treturn <h5 className='text-center mt-5'>Ошибка загрузки</h5>;\n\t}\n\n\tconst renderHeroesList = arr => {\n\t\tif (arr.length === 0) {\n\t\t\treturn (\n\t\t\t\t<CSSTransition timeout={0} classNames='hero'>\n\t\t\t\t\t<h5 className='text-center mt-5'>Героев пока нет</h5>\n\t\t\t\t</CSSTransition>\n\t\t\t);\n\t\t}\n\n\t\treturn arr.map(({ id, ...props }) => {\n\t\t\treturn (\n\t\t\t\t<CSSTransition key={id} timeout={500} classNames='hero'>\n\t\t\t\t\t<HeroesListItem {...props} onDelete={() => onDelete(id)} />\n\t\t\t\t</CSSTransition>\n\t\t\t);\n\t\t});\n\t};\n\n\tconst elements = renderHeroesList(filteredHeroes);\n\treturn <TransitionGroup component='ul'>{elements}</TransitionGroup>;\n};\n\nexport default HeroesList;\n","export const heroesFetching = () => {\n\treturn {\n\t\ttype: 'HEROES_FETCHING',\n\t};\n};\n\nexport const heroesFetched = heroes => {\n\treturn {\n\t\ttype: 'HEROES_FETCHED',\n\t\tpayload: heroes,\n\t};\n};\n\nexport const heroesFetchingError = () => {\n\treturn {\n\t\ttype: 'HEROES_FETCHING_ERROR',\n\t};\n};\n\nexport const filtersFetching = () => {\n\treturn {\n\t\ttype: 'FILTERS_FETCHING',\n\t};\n};\n\nexport const filtersFetched = filters => {\n\treturn {\n\t\ttype: 'FILTERS_FETCHED',\n\t\tpayload: filters,\n\t};\n};\n\nexport const filtersFetchingError = () => {\n\treturn {\n\t\ttype: 'FILTERS_FETCHING_ERROR',\n\t};\n};\n\nexport const activeFilterChanged = filter => {\n\treturn {\n\t\ttype: 'ACTIVE_FILTER_CHANGED',\n\t\tpayload: filter,\n\t};\n};\n\nexport const heroCreated = hero => {\n\treturn {\n\t\ttype: 'HERO_CREATED',\n\t\tpayload: hero,\n\t};\n};\n\nexport const heroDeleted = id => {\n\treturn {\n\t\ttype: 'HERO_DELETED',\n\t\tpayload: id,\n\t};\n};\n","// Задача для этого компонента:\n// Реализовать создание нового героя с введенными данными. Он должен попадать\n// в общее состояние и отображаться в списке + фильтроваться\n// Уникальный идентификатор персонажа можно сгенерировать через uiid\n// Усложненная задача:\n// Персонаж создается и в файле json при помощи метода POST\n// Дополнительно:\n// Элементы <option></option> желательно сформировать на базе\n// данных из фильтров\n\nimport { useHttp } from '../../hooks/http.hook';\nimport { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport { heroCreated } from '../../actions';\n\nconst HeroesAddForm = () => {\n\t// Состояния для контроля формы\n\tconst [heroName, setHeroName] = useState('');\n\tconst [heroDescr, setHeroDescr] = useState('');\n\tconst [heroElement, setHeroElement] = useState('');\n\n\tconst { filters, filtersLoadingStatus } = useSelector(\n\t\tstate => state.filters\n\t);\n\tconst dispatch = useDispatch();\n\tconst { request } = useHttp();\n\n\tconst onSubmitHandler = e => {\n\t\te.preventDefault();\n\t\t// Можно сделать и одинаковые названия состояний,\n\t\t// хотел показать вам чуть нагляднее\n\t\t// Генерация id через библиотеку\n\t\tconst newHero = {\n\t\t\tid: uuidv4(),\n\t\t\tname: heroName,\n\t\t\tdescription: heroDescr,\n\t\t\telement: heroElement,\n\t\t};\n\n\t\t// Отправляем данные на сервер в формате JSON\n\t\t// ТОЛЬКО если запрос успешен - отправляем персонажа в store\n\t\trequest('http://localhost:3001/heroes', 'POST', JSON.stringify(newHero))\n\t\t\t.then(res => console.log(res, 'Отправка успешна'))\n\t\t\t.then(dispatch(heroCreated(newHero)))\n\t\t\t.catch(err => console.log(err));\n\n\t\t// Очищаем форму после отправки\n\t\tsetHeroName('');\n\t\tsetHeroDescr('');\n\t\tsetHeroElement('');\n\t};\n\n\tconst renderFilters = (filters, status) => {\n\t\tif (status === 'loading') {\n\t\t\treturn <option>Загрузка элементов</option>;\n\t\t} else if (status === 'error') {\n\t\t\treturn <option>Ошибка загрузки</option>;\n\t\t}\n\n\t\t// Если фильтры есть, то рендерим их\n\t\tif (filters && filters.length > 0) {\n\t\t\treturn filters.map(({ name, label }) => {\n\t\t\t\t// Один из фильтров нам тут не нужен\n\t\t\t\t// eslint-disable-next-line\n\t\t\t\tif (name === 'all') return;\n\n\t\t\t\treturn (\n\t\t\t\t\t<option key={name} value={name}>\n\t\t\t\t\t\t{label}\n\t\t\t\t\t</option>\n\t\t\t\t);\n\t\t\t});\n\t\t}\n\t};\n\n\treturn (\n\t\t<form\n\t\t\tclassName='border p-4 shadow-lg rounded'\n\t\t\tonSubmit={onSubmitHandler}\n\t\t>\n\t\t\t<div className='mb-3'>\n\t\t\t\t<label htmlFor='name' className='form-label fs-4'>\n\t\t\t\t\tИмя нового героя\n\t\t\t\t</label>\n\t\t\t\t<input\n\t\t\t\t\trequired\n\t\t\t\t\ttype='text'\n\t\t\t\t\tname='name'\n\t\t\t\t\tclassName='form-control'\n\t\t\t\t\tid='name'\n\t\t\t\t\tplaceholder='Как меня зовут?'\n\t\t\t\t\tvalue={heroName}\n\t\t\t\t\tonChange={e => setHeroName(e.target.value)}\n\t\t\t\t/>\n\t\t\t</div>\n\n\t\t\t<div className='mb-3'>\n\t\t\t\t<label htmlFor='text' className='form-label fs-4'>\n\t\t\t\t\tОписание\n\t\t\t\t</label>\n\t\t\t\t<textarea\n\t\t\t\t\trequired\n\t\t\t\t\tname='text'\n\t\t\t\t\tclassName='form-control'\n\t\t\t\t\tid='text'\n\t\t\t\t\tplaceholder='Что я умею?'\n\t\t\t\t\tstyle={{ height: '130px' }}\n\t\t\t\t\tvalue={heroDescr}\n\t\t\t\t\tonChange={e => setHeroDescr(e.target.value)}\n\t\t\t\t/>\n\t\t\t</div>\n\n\t\t\t<div className='mb-3'>\n\t\t\t\t<label htmlFor='element' className='form-label'>\n\t\t\t\t\tВыбрать элемент героя\n\t\t\t\t</label>\n\t\t\t\t<select\n\t\t\t\t\trequired\n\t\t\t\t\tclassName='form-select'\n\t\t\t\t\tid='element'\n\t\t\t\t\tname='element'\n\t\t\t\t\tvalue={heroElement}\n\t\t\t\t\tonChange={e => setHeroElement(e.target.value)}\n\t\t\t\t>\n\t\t\t\t\t<option value=''>Я владею элементом...</option>\n\t\t\t\t\t{renderFilters(filters, filtersLoadingStatus)}\n\t\t\t\t</select>\n\t\t\t</div>\n\n\t\t\t<button type='submit' className='btn btn-primary'>\n\t\t\t\tСоздать\n\t\t\t</button>\n\t\t</form>\n\t);\n};\n\nexport default HeroesAddForm;\n","import { useHttp } from '../../hooks/http.hook';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport classNames from 'classnames';\n\nimport {\n\tfiltersFetching,\n\tfiltersFetched,\n\tfiltersFetchingError,\n\tactiveFilterChanged,\n} from '../../actions';\nimport Spinner from '../spinner/Spinner';\n\n// Задача для этого компонента:\n// Фильтры должны формироваться на основании загруженных данных\n// Фильтры должны отображать только нужных героев при выборе\n// Активный фильтр имеет класс active\n\nconst HeroesFilters = () => {\n\tconst { filters, filtersLoadingStatus, activeFilter } = useSelector(\n\t\tstate => state.filters\n\t);\n\tconst dispatch = useDispatch();\n\tconst { request } = useHttp();\n\n\t// Запрос на сервер для получения фильтров и последовательной смены состояния\n\tuseEffect(() => {\n\t\tdispatch(filtersFetching());\n\t\trequest('http://localhost:3001/filters')\n\t\t\t.then(data => dispatch(filtersFetched(data)))\n\t\t\t.catch(() => dispatch(filtersFetchingError()));\n\n\t\t// eslint-disable-next-line\n\t}, []);\n\n\tif (filtersLoadingStatus === 'loading') {\n\t\treturn <Spinner />;\n\t} else if (filtersLoadingStatus === 'error') {\n\t\treturn <h5 className='text-center mt-5'>Ошибка загрузки</h5>;\n\t}\n\n\tconst renderFilters = arr => {\n\t\tif (arr.length === 0) {\n\t\t\treturn <h5 className='text-center mt-5'>Фильтры не найдены</h5>;\n\t\t}\n\n\t\t// Данные в json-файле я расширил классами и текстом\n\t\treturn arr.map(({ name, className, label }) => {\n\t\t\t// Используем библиотеку classnames и формируем классы динамически\n\t\t\tconst btnClass = classNames('btn', className, {\n\t\t\t\tactive: name === activeFilter,\n\t\t\t});\n\n\t\t\treturn (\n\t\t\t\t<button\n\t\t\t\t\tkey={name}\n\t\t\t\t\tid={name}\n\t\t\t\t\tclassName={btnClass}\n\t\t\t\t\tonClick={() => dispatch(activeFilterChanged(name))}\n\t\t\t\t>\n\t\t\t\t\t{label}\n\t\t\t\t</button>\n\t\t\t);\n\t\t});\n\t};\n\n\tconst elements = renderFilters(filters);\n\n\treturn (\n\t\t<div className='card shadow-lg mt-4'>\n\t\t\t<div className='card-body'>\n\t\t\t\t<p className='card-text'>Отфильтруйте героев по элементам</p>\n\t\t\t\t<div className='btn-group'>{elements}</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default HeroesFilters;\n","import HeroesList from '../heroesList/HeroesList';\nimport HeroesAddForm from '../heroesAddForm/HeroesAddForm';\nimport HeroesFilters from '../heroesFilters/HeroesFilters';\n\nimport './app.scss';\n\nconst App = () => {\n    \n    return (\n        <main className=\"app\">\n            <div className=\"content\">\n                <HeroesList/>\n                <div className=\"content__interactive\">\n                    <HeroesAddForm/>\n                    <HeroesFilters/>\n                </div>\n            </div>\n        </main>\n    )\n}\n\nexport default App;","const initialState = {\r\n\theroes: [],\r\n\theroesLoadingStatus: 'idle',\r\n};\r\n\r\nconst heroes = (state = initialState, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase 'HEROES_FETCHING':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\theroesLoadingStatus: 'loading',\r\n\t\t\t};\r\n\t\tcase 'HEROES_FETCHED':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\theroes: action.payload,\r\n\t\t\t\theroesLoadingStatus: 'idle',\r\n\t\t\t};\r\n\t\tcase 'HEROES_FETCHING_ERROR':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\theroesLoadingStatus: 'error',\r\n\t\t\t};\r\n\t\tcase 'HERO_CREATED':\r\n\t\t\t// Формируем новый массив\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\theroes: [...state.heroes, action.payload],\r\n\t\t\t};\r\n\t\tcase 'HERO_DELETED':\r\n\t\t\t// Формируем новый массив\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\theroes: state.heroes.filter(item => item.id !== action.payload),\r\n\t\t\t};\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\nexport default heroes;\r\n","const initialState = {\r\n\tfilters: [],\r\n\tfiltersLoadingStatus: 'idle',\r\n\tactiveFilter: 'all',\r\n};\r\n\r\nconst filters = (state = initialState, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase 'FILTERS_FETCHING':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tfiltersLoadingStatus: 'loading',\r\n\t\t\t};\r\n\t\tcase 'FILTERS_FETCHED':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tfilters: action.payload,\r\n\t\t\t\tfiltersLoadingStatus: 'idle',\r\n\t\t\t};\r\n\t\tcase 'FILTERS_FETCHING_ERROR':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tfiltersLoadingStatus: 'error',\r\n\t\t\t};\r\n\t\tcase 'ACTIVE_FILTER_CHANGED':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tactiveFilter: action.payload,\r\n\t\t\t};\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\nexport default filters;\r\n","import { createStore, combineReducers } from 'redux';\nimport heroes from '../reducers/heroes';\nimport filters from '../reducers/filters';\n\nconst store = createStore(\n\tcombineReducers({ heroes, filters }),\n\twindow.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport App from './components/app/App';\nimport store from './store';\n\nimport './styles/index.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}